{"version":3,"sources":["Notepad.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL","process","Notepad","id","useParams","history","useHistory","useState","texto","setTexto","useEffect","axios","get","then","res","data","push","v4","split","className","value","onChange","e","target","post","atualizaTexto","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAKMA,EAAcC,wBAEL,SAASC,IAAW,IAC3BC,EAAOC,cAAPD,GACFE,EAAUC,cAFkB,EAGNC,mBAAS,IAHH,mBAGzBC,EAHyB,KAGlBC,EAHkB,KAShCC,qBAAU,WACHP,EAIHQ,IAAMC,IAAN,UAAaZ,EAAb,YAA4BG,IAAMU,MAAK,SAACC,GACtCL,EAASK,EAAIC,KAAKP,UAHpBH,EAAQW,KAAR,WANKC,cAAKC,MAAM,KAAK,OAYtB,CAACf,EAAIE,IAOR,OACE,0BAAUc,UAAU,UACVC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OARA,SAACA,GACrBb,EAASa,EAAEC,OAAOH,OAClBT,IAAMa,KAAN,UAAcxB,EAAd,YAA6BG,GAAM,CAACK,MAAOA,IAMhBiB,CAAcH,MClB9BI,MAdf,WACE,OACE,cAAC,IAAD,UACE,sBAAKP,UAAU,MAAf,UACE,gDACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,IAAIC,OAAO,EAAvB,SAA6B,cAAC1B,EAAD,MAC7B,cAAC,IAAD,CAAOyB,KAAK,OAAZ,SAAmB,cAACzB,EAAD,eCEd2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b3bc20e5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nexport default function Notepad() {\n  let { id } = useParams();\n  let history = useHistory();\n  const [texto, setTexto] = useState('');\n\n  const generateRandomId = () => {\n    return v4().split('-')[0];\n  };\n\n  useEffect(() => {\n    if (!id) {\n      // se não tem id, gero um aleatório e faço redirect\n      history.push(`/${generateRandomId()}`);\n    } else {\n      axios.get(`${BACKEND_URL}/${id}`).then((res) => {\n        setTexto(res.data.texto);\n      });\n    }\n  }, [id, history]);\n\n  const atualizaTexto = (e) => {\n    setTexto(e.target.value);\n    axios.post(`${BACKEND_URL}/${id}`, {texto: texto});\n  };\n\n  return (\n    <textarea className=\"notepad\" \n              value={texto} \n              onChange={(e) => atualizaTexto(e)}>\n    </textarea>\n  )\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Notepad from './Notepad';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <h3>Notepad Online</h3>\n        <Switch>\n          <Route path=\"/\" exact={true}><Notepad/></Route>\n          <Route path=\"/:id\"><Notepad/></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}